from random import randint
import pygame
import numpy as np
import matplotlib.pyplot as plt

FPS = 100
RED = 0xFF0000
GREY = 0x7D7D7D
WHITE = 0xFFFFFF
GREEN = 0x7FFF00
WIDTH = 800
HEIGHT = 600

class Rocket:
    def __init__(self, screen):
        self.screen = screen
        self.y = 300
        self.h = 250
        self.w = 100
        self.vy = 0
        self.m = 30
        self.mt = 35
        self.g = 10
        self.N = 0
        self.A = 0
        self.L = 'OFF'
        self.color = GREY

    def move(self):
         self.vy -= - self.g * dt/10000 - self.N/(1-self.N/50)*0.01 + self.A * (self.vy)
         self.y += self.vy * dt/30
         if ((self.y + self.h) > 551):
            self.vy = 0
            self.y = 300

    def imp(self):
        self.N = 0
        
    def draw(self):
        pygame.draw.rect(self.screen, self.color, pygame.Rect(350, self.y, self.w, self.h))
        pygame.draw.lines(self.screen, self.color, True, [[350, self.y], [350 + self.w, self.y], [350 + 0.5 * self.w, self.y - 30]], 30)

    def Air_force(self):
        rocket.A = 0.01
        rocket.L = 'ON'

    def no_Air_force(self):
        rocket.A = 0
        rocket.L = 'OFF'

class Fuel:
    def __init__(self, screen, x,  y):
        self.screen = screen
        self.x = x
        self.y = y
        self.r = 1
        self.vx = 0
        self.vy = 0
        self.g = 10
        self.count = 1089
        self.color = RED
     
    def move(self, object):
        self.vy =  object.vy + self.g * dt/10000 * (1 + (self.y - object.y -150)/(2*self.r))
        self.y += self.vy * dt/30
        self.x += self.vx * dt

        if (self.y-self.r)> (object.y + object.h):
            self.vy = 1
            self.y += self.vy * dt + self.g*dt*dt/2000
            self.vx =  randint(-1,1)
 
    def draw(self):
        pygame.draw.circle(self.screen, self.color, (self.x, self.y), self.r)

    def imp(self):
        rocket.N = 100
        rocket.mt -= 1

    def hittest(self, obj):
        dy = self.y
        dr = self.r
        x1 = obj.y
        x2 = obj.h 
        return((dy-2*dr)<(x1+x2) and (dy+2*dr)>(x1+x2))

def start():
    u = pygame.font.SysFont("comicsansms", 20)
    value = u.render("Start: off Start - 1" , True, RED)
    screen.blit(value, [260, 10])

def draw_text(text, parametr, position):
    a = pygame.font.SysFont("comicsansms", 18)
    value = a.render(str(text) + str(parametr), True, RED)
    screen.blit(value, [10, position])

def parametres(object):
    draw_text(text = 'Скорость ракеты:' , parametr = round(-object.vy), position = 10)
    draw_text(text = 'Координата ракеты: ', parametr = round(-object.y), position = 30)
    draw_text(text = '(2+ 3-) Масса корпуса ракеты: ', parametr = round(object.m), position = 50)
    draw_text(text = '(4+ 5-) Масса топлива ракеты: ', parametr = round(object.mt), position = 70)
    draw_text(text = '(6+ 7-) Сила сопротивления: ', parametr = object.L , position = 90)
    draw_text(text = '(8+ 9-) Повторных пусков:  '  , parametr = repeat, position = 110)


def control(object):
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_2:
            object.m += 1
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_3:
            object.m -= 1
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_6:
            object.Air_force()
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_7:
            object.no_Air_force()
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_4:
            object.mt += 1
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_5:
            object.mt -= 1   
repeat = 1
def draw_Earth():
    pygame.draw.line(screen, GREEN, (0,552), (850,552), 5)
pygame.init()
while repeat>=0:
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    D = []
    B = []
    A = []
    for j in range(2,100,3):
        for i in range(2,100,3):
            fuel = Fuel(screen, x = 350 +  i, y = 450 + j)
            A.append(fuel)
    rocket = Rocket(screen)
    d = False
    while not d:
        screen.fill(WHITE)
        rocket.draw()
        start()
        parametres(rocket)
        draw_Earth()
        for fuel in A:
            fuel.draw()
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    finished = False
                    d = True
                control(rocket)
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_8:
                        repeat += 1
                    if event.type == pygame.KEYDOWN:
                        if event.key == pygame.K_9:
                            repeat -= 1
    clock = pygame.time.Clock()
    while not finished:
        screen.fill(WHITE)
        rocket.draw()
        draw_Earth()
        parametres(rocket)
        for fuel in A:
            fuel.draw()
        pygame.display.update()
        dt = clock.tick(FPS)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                    finished = True
            control(rocket)
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_8:
                    repeat += 1
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_9:
                    repeat -= 1
                
        for a in A:
            a.move(rocket)
            if a.hittest(rocket):
                fuel.imp()
                rocket.move()
                fuel.move(rocket)
                rocket.imp()
        rocket.move()
        pygame.display.update()
        B.append(-rocket.vy)
        D.append(-rocket.y+294)
        C = []
        for i in range(len(B)):
            C.append(int(i))

    y = B
    x = np.vectorize(lambda i : int(i))(C)
    plt.plot(x, y)
    plt.title("Скорость ракеты")
    plt.show()

    t = np.vectorize(lambda i : int(i))(C)
    w = D
    plt.plot(t, w)
    plt.title("Координата ракеты")
    plt.show()
    repeat -= 1
 
pygame.quit()